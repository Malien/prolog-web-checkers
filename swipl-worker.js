(()=>{"use strict";var __webpack_modules__={9870:(e,r,t)=>{t.r(r),t.d(r,{createEndpoint:()=>n,expose:()=>l,proxy:()=>w,proxyMarker:()=>a,releaseProxy:()=>o,transfer:()=>b,transferHandlers:()=>c,windowEndpoint:()=>g,wrap:()=>p});const a=Symbol("Comlink.proxy"),n=Symbol("Comlink.endpoint"),o=Symbol("Comlink.releaseProxy"),i=Symbol("Comlink.thrown"),s=e=>"object"==typeof e&&null!==e||"function"==typeof e,c=new Map([["proxy",{canHandle:e=>s(e)&&e[a],serialize(e){const{port1:r,port2:t}=new MessageChannel;return l(e,r),[t,[t]]},deserialize:e=>(e.start(),p(e))}],["throw",{canHandle:e=>s(e)&&i in e,serialize({value:e}){let r;return r=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[r,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function l(e,r=self){r.addEventListener("message",(function t(a){if(!a||!a.data)return;const{id:n,type:o,path:s}=Object.assign({path:[]},a.data),c=(a.data.argumentList||[]).map(f);let p;try{const r=s.slice(0,-1).reduce(((e,r)=>e[r]),e),t=s.reduce(((e,r)=>e[r]),e);switch(o){case 0:p=t;break;case 1:r[s.slice(-1)[0]]=f(a.data.value),p=!0;break;case 2:p=t.apply(r,c);break;case 3:p=w(new t(...c));break;case 4:{const{port1:r,port2:t}=new MessageChannel;l(e,t),p=b(r,[r])}break;case 5:p=void 0}}catch(e){p={value:e,[i]:0}}Promise.resolve(p).catch((e=>({value:e,[i]:0}))).then((e=>{const[a,i]=y(e);r.postMessage(Object.assign(Object.assign({},a),{id:n}),i),5===o&&(r.removeEventListener("message",t),u(r))}))})),r.start&&r.start()}function u(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function p(e,r){return m(e,[],r)}function _(e){if(e)throw new Error("Proxy has been released and is not useable")}function m(e,r=[],t=function(){}){let a=!1;const i=new Proxy(t,{get(t,n){if(_(a),n===o)return()=>L(e,{type:5,path:r.map((e=>e.toString()))}).then((()=>{u(e),a=!0}));if("then"===n){if(0===r.length)return{then:()=>i};const t=L(e,{type:0,path:r.map((e=>e.toString()))}).then(f);return t.then.bind(t)}return m(e,[...r,n])},set(t,n,o){_(a);const[i,s]=y(o);return L(e,{type:1,path:[...r,n].map((e=>e.toString())),value:i},s).then(f)},apply(t,o,i){_(a);const s=r[r.length-1];if(s===n)return L(e,{type:4}).then(f);if("bind"===s)return m(e,r.slice(0,-1));const[c,l]=d(i);return L(e,{type:2,path:r.map((e=>e.toString())),argumentList:c},l).then(f)},construct(t,n){_(a);const[o,i]=d(n);return L(e,{type:3,path:r.map((e=>e.toString())),argumentList:o},i).then(f)}});return i}function d(e){const r=e.map(y);return[r.map((e=>e[0])),(t=r.map((e=>e[1])),Array.prototype.concat.apply([],t))];var t}const T=new WeakMap;function b(e,r){return T.set(e,r),e}function w(e){return Object.assign(e,{[a]:!0})}function g(e,r=self,t="*"){return{postMessage:(r,a)=>e.postMessage(r,t,a),addEventListener:r.addEventListener.bind(r),removeEventListener:r.removeEventListener.bind(r)}}function y(e){for(const[r,t]of c)if(t.canHandle(e)){const[a,n]=t.serialize(e);return[{type:3,name:r,value:a},n]}return[{type:0,value:e},T.get(e)||[]]}function f(e){switch(e.type){case 3:return c.get(e.name).deserialize(e.value);case 0:return e.value}}function L(e,r,t){return new Promise((a=>{const n=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");e.addEventListener("message",(function r(t){t.data&&t.data.id&&t.data.id===n&&(e.removeEventListener("message",r),a(t.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:n},r),t)}))}},6025:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.loadSwiplInDocument=exports.configureExternallyLoadedSwipl=exports.loadSwiplInWorker=exports.loadSwiplBinary=exports.initPL=exports.CharBufferFlags=exports.TermType=void 0;const newtype_1=__webpack_require__(8903),filterNumericKeys=e=>Object.fromEntries(Object.entries(e).filter((([e])=>Number.parseInt(e)!==Number.NaN)));var TermType,CharBufferFlags;!function(e){e[e.VARIABLE=1]="VARIABLE",e[e.ATOM=2]="ATOM",e[e.INTEGER=3]="INTEGER",e[e.FLOAT=4]="FLOAT",e[e.STRING=5]="STRING",e[e.TERM=6]="TERM",e[e.NIL=7]="NIL",e[e.BLOB=8]="BLOB",e[e.LIST_PAIR=9]="LIST_PAIR",e[e.FUNCTOR=10]="FUNCTOR",e[e.LIST=11]="LIST",e[e.CHARS=12]="CHARS",e[e.POINTER=13]="POINTER",e[e.CODE_LIST=14]="CODE_LIST",e[e.CHAR_LIST=15]="CHAR_LIST",e[e.BOOL=16]="BOOL",e[e.FUNCTOR_CHARS=17]="FUNCTOR_CHARS",e[e.PREDICATE_INDICATOR=18]="PREDICATE_INDICATOR",e[e.SHORT=19]="SHORT",e[e.INT=20]="INT",e[e.LONG=21]="LONG",e[e.DOUBLE=22]="DOUBLE",e[e.NCHARS=23]="NCHARS",e[e.UTF8_CHARS=24]="UTF8_CHARS",e[e.UTF8_STRING=25]="UTF8_STRING",e[e.INT64=26]="INT64",e[e.NUTF8_CHARS=27]="NUTF8_CHARS",e[e.NUTF8_CODES=28]="NUTF8_CODES",e[e.NUTF8_STRING=29]="NUTF8_STRING",e[e.NWCHARS=30]="NWCHARS",e[e.NWCODES=31]="NWCODES",e[e.NWSTRING=32]="NWSTRING",e[e.MBCHARS=33]="MBCHARS",e[e.MBCODES=34]="MBCODES",e[e.MBSTRING=35]="MBSTRING",e[e.INTPTR=36]="INTPTR",e[e.CHAR=37]="CHAR",e[e.CODE=38]="CODE",e[e.BYTE=39]="BYTE",e[e.PARTIAL_LIST=40]="PARTIAL_LIST",e[e.CYCLIC_TERM=41]="CYCLIC_TERM",e[e.NOT_A_LIST=42]="NOT_A_LIST",e[e.DICT=43]="DICT"}(TermType=exports.TermType||(exports.TermType={})),function(e){e[e.CVT_ATOM=1]="CVT_ATOM",e[e.CVT_STRING=2]="CVT_STRING",e[e.CVT_LIST=4]="CVT_LIST",e[e.CVT_INTEGER=8]="CVT_INTEGER",e[e.CVT_RATIONAL=16]="CVT_RATIONAL",e[e.CVT_FLOAT=32]="CVT_FLOAT",e[e.CVT_VARIABLE=64]="CVT_VARIABLE",e[e.CVT_NUMBER=48]="CVT_NUMBER",e[e.CVT_ATOMIC=51]="CVT_ATOMIC",e[e.CVT_WRITE=128]="CVT_WRITE",e[e.CVT_WRITE_CANONICAL=128]="CVT_WRITE_CANONICAL",e[e.CVT_WRITEQ=192]="CVT_WRITEQ",e[e.CVT_ALL=55]="CVT_ALL",e[e.CVT_MASK=4095]="CVT_MASK",e[e.CVT_EXCEPTION=4096]="CVT_EXCEPTION",e[e.CVT_VARNOFAIL=8192]="CVT_VARNOFAIL",e[e.BUF_DISCARDABLE=0]="BUF_DISCARDABLE",e[e.BUF_STACK=65536]="BUF_STACK",e[e.BUF_MALLOC=131072]="BUF_MALLOC",e[e.BUF_ALLOW_STACK=262144]="BUF_ALLOW_STACK",e[e.BUF_RING=65536]="BUF_RING",e[e.REP_ISO_LATIN_1=0]="REP_ISO_LATIN_1",e[e.REP_UTF8=1048576]="REP_UTF8",e[e.REP_MB=2097152]="REP_MB"}(CharBufferFlags=exports.CharBufferFlags||(exports.CharBufferFlags={}));const plHeaderConstants={Q_NORMAL:2,...filterNumericKeys(CharBufferFlags),...filterNumericKeys(TermType)},createBindings=()=>({initialise:cwrap("PL_initialise","number",["number","number"]),newTermRef:cwrap("PL_new_term_ref","number",[]),charsToTerm:cwrap("PL_chars_to_term","number",["string","number"]),call:cwrap("PL_call","number",["number","number"]),predicate:cwrap("PL_predicate","number",["string","number","string"]),pred:cwrap("PL_pred","number",["string","number"]),newTermRefs:cwrap("PL_new_term_refs","number",["number"]),putAtomChars:cwrap("PL_put_atom_chars","number",["number","string"]),callPredicate:cwrap("PL_call_predicate","boolean",["number","number","number","number"]),openQuery:cwrap("PL_open_query","number",["number","number","number","number"]),nextSolution:cwrap("PL_next_solution","number",["number"]),cutQuery:cwrap("PL_cut_query","number",["number"]),closeQuery:cwrap("PL_close_query","number",["number"]),currentQuery:cwrap("PL_current_query","number",[]),termType:cwrap("PL_term_type","number",["number"]),newAtom:cwrap("PL_new_atom","number",["string"]),atomChars:cwrap("PL_atom_chars","string",["number"]),newFunctor:cwrap("PL_new_functor","number",["number","number"]),functorName:cwrap("PL_functor_name","number",["number"]),functorArity:cwrap("PL_functor_arity","number",["number"]),getAtom:cwrap("PL_get_atom","number",["number","number"]),getAtomChars:cwrap("PL_get_atom_chars","number",["number","number"]),getChars:cwrap("PL_get_chars","number",["number","number","number"]),getNameArity:cwrap("PL_get_name_arity","number",["number","number","number"]),getCompoundNameArity:cwrap("PL_get_compound_name_arity","number",["number","number","number"]),getArg:cwrap("PL_get_arg","number",["number","number","number"]),copyTermRef:cwrap("PL_copy_term_ref","number",["number"]),putInteger:cwrap("PL_put_integer","number",["number","number"]),getInteger:cwrap("PL_get_integer","number",["number","number"]),putTerm:cwrap("PL_put_term","number",["number","number"]),getFloat:cwrap("PL_get_float","number",["number","number"]),getList:cwrap("PL_get_list","number",["number","number","number"])}),initialise=(e,r)=>{const t=[allocate(intArrayFromString("swipl"),"i8",ALLOC_NORMAL),allocate(intArrayFromString("-x"),"i8",ALLOC_NORMAL),allocate(intArrayFromString("wasm-preload/swipl.prc"),"i8",ALLOC_NORMAL),allocate(intArrayFromString("--nosignals"),"i8",ALLOC_NORMAL)],a=r._malloc(4*t.length);for(let e=0;e<t.length;e++)setValue(a+4*e,t[e],"*");if(!e.initialise(4,a))throw new Error("SWI-Prolog initialisation failed");const n=e.newTermRef();if(!e.charsToTerm("assert(user:file_search_path(library, 'wasm-preload/library')).",n))throw new Error("SWI-Prolog initialisation failed");return e.call(n,newtype_1.wrap(0))};let globalPL;const innerInitPL=()=>{if(globalPL)return globalPL;const e={...createBindings(),...plHeaderConstants};return initialise(e,Module),e};let __resolvePromise__,__rejectPromise__;const plPromise=new Promise(((e,r)=>{__resolvePromise__=e,__rejectPromise__=r})).then((e=>(__resolvePromise__=void 0,__rejectPromise__=void 0,e))),initPL=()=>plPromise;exports.initPL=initPL;const readStdin=()=>null,configureModule=e=>({noInitialRun:!0,locateFile:r=>`${e}/${r}`,print:console.log,printErr:console.error,preRun:[()=>FS.init(readStdin)],onRuntimeInitialized:()=>{try{__resolvePromise__?.(innerInitPL())}catch(e){__rejectPromise__?.(e)}}}),locateFile=e=>globalThis.Module.locateFile(e,void 0),loadSwiplBinary=location=>(globalThis.Module=configureModule(location),fetch(locateFile("swipl-web.js")).then((e=>e.text())).then(eval),exports.initPL());exports.loadSwiplBinary=loadSwiplBinary;const loadSwiplInWorker=e=>{if(!self)throw new Error("Only available in WebWorkers");return globalThis.Module=configureModule(e),globalThis.importScripts(locateFile("swipl-web.js")),exports.initPL()};exports.loadSwiplInWorker=loadSwiplInWorker;const configureExternallyLoadedSwipl=e=>{globalThis.Module=configureModule(e)};exports.configureExternallyLoadedSwipl=configureExternallyLoadedSwipl;const loadScript=(e,r=!0,t="text/javascript")=>new Promise(((a,n)=>{try{const o=document.createElement("script"),i=document.head||document.body;o.type=t,o.async=r,o.src=e,o.addEventListener("load",(()=>{a({status:!0})})),o.addEventListener("error",(()=>{n({status:!1,message:`Failed to load the script ${e}`})})),i.appendChild(o)}catch(e){n(e)}})),loadSwiplInDocument=async e=>(globalThis.Module=configureModule(e),await loadScript(locateFile("swipl-web.js")),exports.initPL());exports.loadSwiplInDocument=loadSwiplInDocument},3253:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.bind=r.assertCompoundTermShape=r.assertTermType=r.TermTypeError=void 0;const a=t(6025),n=t(1745);class o extends Error{constructor(e,r){super(e instanceof Array?`TermTypeError: Expected term type to be one of ${e.map((e=>a.TermType[e])).join()}, got ${a.TermType[r]}`:`TermTypeError: Expected term to be of type ${a.TermType[e]}, got ${a.TermType[r]}`),this.expected=e,this.got=r}}r.TermTypeError=o;class i{constructor(e,r){this.PL=e,this.term=r,this.type=this.PL.termType(this.term)}toBe(e){if(this.type!==e)throw new o(e,this.type)}toBeOneOf(...e){if(!e.includes(this.type))throw new o(e,this.type)}toBeList(){this.toBeOneOf(a.TermType.LIST,a.TermType.LIST_PAIR,a.TermType.NIL)}}function s(e,t,o,i){r.assertTermType(e,t).toBe(a.TermType.TERM);const[s,c]=n.getNameArity(e,t);if(o!==s&&i!=c)throw new Error(`Expected board term to be "${o}/${i}"`);return[o,i]}r.assertTermType=(e,r)=>new i(e,r),r.assertCompoundTermShape=s,r.bind=n.bindPrologFunctions({assertTermType:r.assertTermType,assertCompoundTermShape:s}),r.default={bind:r.bind}},1745:function(e,r,t){Object.defineProperty(r,"__esModule",{value:!0}),r.bind=r.bindPrologFunctions=r.collectList=r.openQuery=r.newTermRefs=r.constructArgsArray=r.withStack=r.getNameArity=r.advancePtr=r.getTermChars=r.getFloat=r.getInteger=r.getAtomChars=r.loadProgramFile=r.callPredicate=r.call=r.getF64Value=r.getI32Value=void 0;const a=t(8910);r.getI32Value=e=>Module.HEAP32[e/4];r.getF64Value=e=>Module.HEAPF64[e/8];r.call=(e,r)=>{const t=e.newTermRef();if(!e.charsToTerm(r,t))throw new Error("Query has a syntax error: "+r);return e.call(t,a.wrap(0))};r.callPredicate=(e,r,t)=>e.callPredicate(a.wrap(0),e.Q_NORMAL,r,t);r.loadProgramFile=async(e,t)=>{const a=t instanceof Response?await t.arrayBuffer():t;FS.writeFile("/main.pl",new Uint8Array(a)),r.call(e,"consult('/main.pl').")};r.getAtomChars=(e,t)=>r.withStack((()=>{const a=stackAlloc(4);if(!e.getAtomChars(t,a))throw new Error("Could not get atom name");return UTF8ToString(r.getI32Value(a))}));r.getInteger=(e,t)=>r.withStack((()=>{const a=stackAlloc(4);if(!e.getInteger(t,a))throw new Error("Could not get term's integer value");return r.getI32Value(a)}));r.getFloat=(e,t)=>r.withStack((()=>{const a=stackAlloc(8);if(!e.getFloat(t,a))throw new Error("Could not get term's floating point value");return r.getF64Value(a)}));r.getTermChars=(e,t,a=e.CVT_ALL)=>r.withStack((()=>{const n=stackAlloc(4);if(!e.getChars(t,n,a|e.BUF_DISCARDABLE|e.REP_UTF8|e.CVT_EXCEPTION))throw new Error("Could not read term string characters");return UTF8ToString(r.getI32Value(n))}));r.advancePtr=(e,r)=>a.wrap(a.unwrap(e)+4*r);r.getNameArity=(e,t)=>r.withStack((()=>{const n=stackAlloc(4),o=stackAlloc(4);e.getNameArity(t,n,o);const i=a.wrap(r.getI32Value(n));return[e.atomChars(i),r.getI32Value(o)]}));function n(e,t,a,n){void 0===n&&([,n]=r.getNameArity(e,t));const o=[],i=e.newTermRef();for(let r=1;r<=n;++r){if(!e.getArg(r,t,i))throw new Error(`Cannot retrieve argument to a compound term at index ${r}`);o.push(a(i))}return o}r.withStack=e=>{const r=stackSave(),t=e();return stackRestore(r),t},r.constructArgsArray=n;r.newTermRefs=(e,r)=>{const t=e.newTermRefs(r);return[...Array(r).keys()].map((e=>a.wrap(a.unwrap(t)+e)))};r.openQuery=(e,r,t)=>e.openQuery(a.wrap(0),e.Q_NORMAL,r,t);r.collectList=(e,r,t)=>{const a=e.newTermRef(),n=e.copyTermRef(r),o=[];for(;e.getList(n,a,n);)o.push(t(a));return o};r.bindPrologFunctions=e=>r=>Object.fromEntries(Object.entries(e).map((([e,t])=>[e,t.bind(this,r)]))),r.bind=r.bindPrologFunctions({call:r.call,callPredicate:r.callPredicate,loadProgramFile:r.loadProgramFile,getAtomChars:r.getAtomChars,getTermChars:r.getTermChars,getNameArity:r.getNameArity,constructArgsArray:n,newTermRefs:r.newTermRefs,openQuery:r.openQuery,getInteger:r.getInteger,getFloat:r.getFloat,collectList:r.collectList}),r.default={bind:r.bind}},7807:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.compose=void 0,r.compose=function(...e){return r=>{let t=r;for(const r of e)t=r(t);return t}}},8910:function(e,r,t){var a=this&&this.__createBinding||(Object.create?function(e,r,t,a){void 0===a&&(a=t),Object.defineProperty(e,a,{enumerable:!0,get:function(){return r[t]}})}:function(e,r,t,a){void 0===a&&(a=t),e[a]=r[t]}),n=this&&this.__exportStar||function(e,r){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(r,t)||a(r,e,t)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.capitalize=r.cmpPositions=r.allocateArray=r.measureWithResult=void 0,n(t(7807),r),n(t(8903),r),n(t(2153),r);var i=t(9801);Object.defineProperty(r,"measureWithResult",{enumerable:!0,get:function(){return o(i).default}});r.allocateArray=(e,r)=>Array(e).fill(r);r.cmpPositions=([e,r],[t,a])=>e==t&&r==a;r.capitalize=e=>e?e[0].toLocaleUpperCase()+e.slice(1):e},9801:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.default=async function(e){const r=performance.now();return[await e(),performance.now()-r]}},8903:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.unwrap=r.wrap=void 0;r.wrap=e=>e;r.unwrap=e=>e},2153:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0})}},__webpack_module_cache__={};function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,r)=>{for(var t in r)__webpack_require__.o(r,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},__webpack_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{const e=__webpack_require__(9870),r=__webpack_require__(6025),t=__webpack_require__(1745),a=__webpack_require__(3253),n=r.loadSwiplInWorker("./swipl-wasm").then((async e=>{const n={boardInitializeGame:e.predicate("board_initialize_game",1,"user"),nextMove:e.predicate("next_move",5,"user"),allMoves:e.predicate("all_moves",4,"user"),testBoard1:e.predicate("test_board_1",1,"user"),testBoard2:e.predicate("test_board_2",1,"user"),testBoard3:e.predicate("test_board_3",1,"user"),testBoard4:e.predicate("test_board_4",1,"user"),testBoard5:e.predicate("test_board_5",1,"user"),testBoard6:e.predicate("test_board_6",1,"user"),minimax:e.predicate("minimax",5,"user"),alphabeta:e.predicate("alphabeta",5,"user"),listAvailableMoves:e.predicate("list_available_moves",3,"user"),canEat:e.predicate("can_eat",3,"user"),nextPlayer:e.predicate("next_player",2,"user")},o=t.bind(e),i=a.bind(e);await o.loadProgramFile(await fetch("./main.pl"));const s=a=>{i.assertCompoundTermShape(a,"m",5);const[n,s,c,l]=t.constructArgsArray(e,a,(e=>(i.assertTermType(e).toBe(r.TermType.INTEGER),o.getInteger(e))),4),u=e.newTermRef();if(!e.getArg(5,a,u))throw new Error("Couldn't get nexBoard from move");return{from:[n-1,s-1],to:[c-1,l-1],nextBoard:u}},c=t=>(i.assertTermType(t).toBeOneOf(r.TermType.ATOM,r.TermType.INTEGER),o.getTermChars(t,e.CVT_ATOM|e.CVT_INTEGER)),l=r=>(i.assertCompoundTermShape(r,"l",8),t.constructArgsArray(e,r,c,8));return{PL:e,predicates:n,...o,...i,retrieveBoard:r=>(i.assertCompoundTermShape(r,"game_board",8),t.constructArgsArray(e,r,l,8)),retrieveMove:s,retrieveMoveOrEatList:a=>e.termType(a)===r.TermType.TERM?[s(a)]:(i.assertTermType(a).toBeList(),t.collectList(e,a,s)),retrievePosition:r=>(i.assertCompoundTermShape(r,"p",3),t.constructArgsArray(e,r,o.getInteger,2))}})),o=e=>async(...r)=>(await n)[e](...r),i=e=>`l(${e.join(",")})`,s={ready:n.then((()=>{})),async testBoard(e){const{PL:r,predicates:t,callPredicate:a}=await n,o=r.newTermRef();return a(t[`testBoard${e}`],o),o},async initializeBoard(){const{PL:e,predicates:r,callPredicate:t}=await n,a=e.newTermRef();return t(r.boardInitializeGame,a),a},retrieveMove:o("retrieveMove"),retrieveMoveOrEatList:o("retrieveMoveOrEatList"),retrieveBoard:o("retrieveBoard"),retrievePosition:o("retrievePosition"),async availableMoves(e,r){const{PL:a,callPredicate:o,predicates:i,assertTermType:s,retrieveMoveOrEatList:c}=await n,l=a.copyTermRef(e),[u,p]=t.newTermRefs(a,2);return a.putAtomChars(u,r),o(i.listAvailableMoves,l)?(s(p).toBeList(),t.collectList(a,p,c).flat()):[]},async movesFor(e,[r,a]){const{PL:o,callPredicate:i,predicates:s,retrieveMove:c}=await n,l=o.copyTermRef(e),[u,p,_]=t.newTermRefs(o,4);return o.putInteger(u,r+1),o.putInteger(p,a+1),i(s.allMoves,l),t.collectList(o,_,c)},async swapBoards(e,r){const{PL:t,retrieveBoard:a}=await n;return t.putTerm(e,r),a(e)},async evaluateBestMove(e,r,a,o){const{predicates:i,PL:s,callPredicate:c,retrieveMove:l,getInteger:u}=await n,p=i[a],[_,m,d,T,b]=t.newTermRefs(s,5);if(s.putTerm(_,e),s.putAtomChars(m,r),s.putInteger(d,o),c(p,_))return[l(T),u(b)]},async canEat(e,r){const{PL:a,predicates:o,callPredicate:i,retrievePosition:s}=await n,[c,l,u]=t.newTermRefs(a,3);if(a.putTerm(c,e),a.putAtomChars(l,r),!i(o.canEat,c))throw new Error("Couldn't evaluate can_eat/3");return t.collectList(a,u,s).map((([e,r])=>[e-1,r-1]))},async nextPlayer(e){const{PL:r,predicates:a,callPredicate:o,getAtomChars:i}=await n,[s,c]=t.newTermRefs(r,2);if(r.putAtomChars(s,e),!o(a.nextPlayer,s))throw new Error(`Next player for ${e} is not defined`);return i(c)},async encodeBoard(e){const{PL:r}=await n,t=(e=>`game_board(${e.map(i).join(",")})`)(e),a=r.newTermRef();if(!r.charsToTerm(t,a))throw new Error("Can't convert js game board to PL term");return a}};e.expose(s)})()})();